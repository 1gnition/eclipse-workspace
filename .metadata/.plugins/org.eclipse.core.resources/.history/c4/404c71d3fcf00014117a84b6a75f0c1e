package leif;

import generated.AppFrameworkConfig;

import java.io.ByteArrayOutputStream;
import java.io.FileInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;
import javax.xml.bind.Unmarshaller;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamWriter;
import javax.xml.transform.sax.SAXSource;

import org.ff4j.conf.XmlConfiguration;
import org.ff4j.conf.XmlParser;
import org.xml.sax.InputSource;

import com.sun.xml.bind.marshaller.NamespacePrefixMapper;

public class Main {
	@SuppressWarnings("restriction")
	public static void main(String[] args) throws Exception {
		FileInputStream fis = new FileInputStream("src\\main\\resources\\OAppSelfConfig.xml");
		JAXBContext context = JAXBContext.newInstance("generated");
		Unmarshaller unmarshaller = context.createUnmarshaller();
		JAXBElement<AppFrameworkConfig> element = unmarshaller.unmarshal(new SAXSource(new InputSource(fis)), AppFrameworkConfig.class);
		AppFrameworkConfig config = element.getValue();
		Marshaller marshaller = context.createMarshaller();
		
		ByteArrayOutputStream baos = new ByteArrayOutputStream(1024*1024*8);
		
		marshaller.marshal(config.getFeatures(), baos);
		baos.flush();
		baos.close();
		
		String string = baos.toString();
		System.out.println(string);
		System.out.println(baos.toString().replaceAll("(\\W)ns\\d*:", ""));
		
//		XmlConfiguration configuration = new XmlParser().parseConfigurationFile(pis);
//		System.out.println(configuration);
//		
//		System.out.println();
	}
}
