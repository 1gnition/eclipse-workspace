<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Variable name: &apos;list&apos;&#x0D;&#x0A;- Destination method: &apos;Main.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new ArrayList&lt;String&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Main.java" name="list" replace="true" selection="261 0" stamp="1415567725414" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;string&apos; in &apos;Main.main(...)&apos; to &apos;str&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Original element: &apos;Main.main(String[]).string&apos;&#x0D;&#x0A;- Renamed element: &apos;string&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;string&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;{Main.java[Main~main~\[QString;@string!292!311!299!304!QString;!0!false" name="str" references="true" stamp="1415567805502" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;map&apos; from expression &apos;new HashMap&lt;&gt;()&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Variable name: &apos;map&apos;&#x0D;&#x0A;- Destination method: &apos;Main.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new HashMap&lt;&gt;()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;map&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Main.java" name="map" replace="true" selection="524 0" stamp="1415568871777" version="1.0"/>&#x0A;&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;MyProject&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     Main.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;{Main.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1415569287928" version="1.0"/>&#x0A;<refactoring abstract="true" comment="Extract interface &apos;FooInter&apos; from &apos;Foo&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Original element: &apos;Foo&apos;&#x0D;&#x0A;- Extracted interface: &apos;FooInter&apos;&#x0D;&#x0A;- Extracted members:&#x0D;&#x0A;     Foo.getX()&#x0D;&#x0A;     Foo.setX(...)&#x0D;&#x0A;     Foo.getY()&#x0D;&#x0A;     Foo.setY(...)&#x0D;&#x0A;- Use super type where possible" comments="true" description="Extract interface &apos;FooInter&apos;" element1="/src&lt;{Foo.java[Foo~getX" element2="/src&lt;{Foo.java[Foo~setX~I" element3="/src&lt;{Foo.java[Foo~getY" element4="/src&lt;{Foo.java[Foo~setY~I" flags="589830" id="org.eclipse.jdt.ui.extract.interface" input="/src&lt;{Foo.java[Foo" instanceof="false" name="FooInter" public="true" replace="true" stamp="1415569496703" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;MyProject&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Original element: &apos;FooInter.java&apos;" description="Delete element" element1="/src&lt;{FooInter.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1415569514747" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;MyProject&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Original element: &apos;Foo.java&apos;" description="Delete element" element1="/src&lt;{Foo.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1415823699252" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;preloader&apos; from expression &apos;new Preloader()&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Variable name: &apos;preloader&apos;&#x0D;&#x0A;- Destination method: &apos;Main.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Preloader()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;preloader&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Main.java" name="preloader" replace="true" selection="768 0" stamp="1415824531553" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;task&apos; from expression &apos;Executors.newSingleThreadExecutor().submit(new Callable&lt;Boolean&gt;(){@Override public Boolean call() throws Exception {return true;}})&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Variable name: &apos;task&apos;&#x0D;&#x0A;- Destination method: &apos;Main.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;Executors.newSingleThreadExecutor().submit(new Callable&lt;Boolean&gt;(){@Override public Boolean call() throws Exception {return true;}})&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;task&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Main.java" name="task" replace="true" selection="506 0" stamp="1415825593794" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;main&apos; from expression &apos;new Main()&apos;&#x0D;&#x0A;- Original project: &apos;MyProject&apos;&#x0D;&#x0A;- Variable name: &apos;main&apos;&#x0D;&#x0A;- Destination method: &apos;Main.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Main()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;main&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;{Main.java" name="main" replace="true" selection="389 0" stamp="1415829071863" version="1.0"/>
</session>